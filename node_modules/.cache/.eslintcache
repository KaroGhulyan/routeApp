[{"/home/karo/Documents/routeApp/src/index.js":"1","/home/karo/Documents/routeApp/src/App.js":"2","/home/karo/Documents/routeApp/src/app/store.js":"3","/home/karo/Documents/routeApp/src/style.js":"4","/home/karo/Documents/routeApp/src/features/routesAPI.js":"5","/home/karo/Documents/routeApp/src/features/appSlice.js":"6","/home/karo/Documents/routeApp/src/components/Header.js":"7","/home/karo/Documents/routeApp/src/components/Map/Map.js":"8","/home/karo/Documents/routeApp/src/components/Stops/Stops.js":"9","/home/karo/Documents/routeApp/src/components/Stops/StopItem.js":"10"},{"size":377,"mtime":1630910296858,"results":"11","hashOfConfig":"12"},{"size":815,"mtime":1630928255598,"results":"13","hashOfConfig":"12"},{"size":180,"mtime":1630837272000,"results":"14","hashOfConfig":"12"},{"size":2720,"mtime":1630930477995,"results":"15","hashOfConfig":"12"},{"size":294,"mtime":1630837204000,"results":"16","hashOfConfig":"12"},{"size":784,"mtime":1630929347100,"results":"17","hashOfConfig":"12"},{"size":1583,"mtime":1630929319112,"results":"18","hashOfConfig":"12"},{"size":2203,"mtime":1630927611615,"results":"19","hashOfConfig":"12"},{"size":487,"mtime":1630927685916,"results":"20","hashOfConfig":"12"},{"size":2557,"mtime":1630930257992,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hwgdbk",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/karo/Documents/routeApp/src/index.js",[],["45","46"],"/home/karo/Documents/routeApp/src/App.js",["47","48"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { routes } from './features/appSlice';\nimport { fetchRoutes } from './features/routesAPI';\nimport Header from './components/Header';\nimport Map from './components/Map/Map';\nimport Stops from './components/Stops/Stops';\nimport { Wrapper, Main } from './style';\nimport { useDispatch } from 'react-redux';\n\nfunction App() {\n  const [value, setValue] = useState(0);\n  const dispatch = useDispatch();\n\n  const selectedTab = (value) => {\n    setValue(value);\n  };\n\n  useEffect(async () => {\n    const response = await fetchRoutes()\n    dispatch(routes(response.stops));\n  }, []);\n\n  return (\n    <Wrapper>\n      <Header selectedTab={selectedTab} />\n      <Main>{!value ? <Stops /> : <Map />}</Main>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","/home/karo/Documents/routeApp/src/app/store.js",[],"/home/karo/Documents/routeApp/src/style.js",[],"/home/karo/Documents/routeApp/src/features/routesAPI.js",[],"/home/karo/Documents/routeApp/src/features/appSlice.js",["49"],"/home/karo/Documents/routeApp/src/components/Header.js",[],"/home/karo/Documents/routeApp/src/components/Map/Map.js",["50"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  Polyline,\r\n} from 'react-leaflet';\r\nimport { useSelector } from 'react-redux';\r\nimport L from 'leaflet';\r\nimport { selectCurrentStop, selectRoutes } from '../../features/appSlice';\r\nimport RedIcon from \"../../assets/red.svg\"\r\nimport BlueIcon from '../../assets/blue.svg'\r\n\r\nfunction Map() {\r\n  const finished = L.icon({\r\n    iconUrl:RedIcon,\r\n    iconSize: [27, 57],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n  const delivery = L.icon({\r\n    iconUrl:BlueIcon,\r\n    iconSize: [27, 57],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n  const { address } = useSelector(selectCurrentStop);\r\n  const stops = useSelector(selectRoutes);\r\n  const [stopsData, setStopsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (stops.length > 0) {\r\n      stops.forEach(({ address }) => {\r\n        arr.push(Object.values({ lat: address.lat, lng: address.lng }));\r\n      });\r\n    }\r\n    setStopsData(arr);\r\n  }, [stops]);\r\n\r\n  const stopsRoutes = () => {\r\n    if(stops.length > 0){\r\n      return stops.map((stop, index) => {\r\n        return (\r\n          <Marker position={[stop?.address?.lat,stop?.address?.lng]} icon={stop?.isFinished ? finished : delivery} key={index}>\r\n            <Popup>\r\n              <h3>{stop?.information?.name}</h3>\r\n              <span>{stop?.information?.street}</span>\r\n              <h4 style={{color:stop?.isFinished ? '#28a745' : 'tomato'}}>{stop?.isFinished ? 'Delivered' : 'Delivery'}</h4>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      className=\"map\"\r\n      center={[52.79797, 6.89503]}\r\n      zoom={13}\r\n      scrollWheelZoom={false}\r\n      style={{top:\"48px\"}}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Polyline pathOptions={{ color: '#1329FE' }} positions={stopsData} />\r\n      {\r\n        stopsRoutes()\r\n      }\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","/home/karo/Documents/routeApp/src/components/Stops/Stops.js",[],"/home/karo/Documents/routeApp/src/components/Stops/StopItem.js",["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":19,"column":13,"nodeType":"59","endLine":22,"endColumn":4},{"ruleId":"57","severity":1,"message":"60","line":22,"column":6,"nodeType":"61","endLine":22,"endColumn":8,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":28,"column":11,"nodeType":"65","messageId":"66","endLine":28,"endColumn":18},{"ruleId":"63","severity":1,"message":"68","line":30,"column":9,"nodeType":"65","messageId":"66","endLine":30,"endColumn":17},{"ruleId":"57","severity":1,"message":"69","line":48,"column":6,"nodeType":"61","endLine":48,"endColumn":8,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-unused-vars","'createAsyncThunk' is defined but never used.","Identifier","unusedVar","'address' is assigned a value but never used.","'doneStop' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isFinished'. Either include it or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch]",{"range":"79","text":"80"},"Update the dependencies array to be: [isFinished]",{"range":"81","text":"82"},[648,650],"[dispatch]",[1234,1236],"[isFinished]"]