[{"/home/karo/Documents/routeApp/src/index.js":"1","/home/karo/Documents/routeApp/src/App.js":"2","/home/karo/Documents/routeApp/src/app/store.js":"3","/home/karo/Documents/routeApp/src/style.js":"4","/home/karo/Documents/routeApp/src/features/routesAPI.js":"5","/home/karo/Documents/routeApp/src/features/appSlice.js":"6","/home/karo/Documents/routeApp/src/components/Header.js":"7","/home/karo/Documents/routeApp/src/components/Map/Map.js":"8","/home/karo/Documents/routeApp/src/components/Stops/Stops.js":"9","/home/karo/Documents/routeApp/src/components/Stops/StopItem.js":"10"},{"size":377,"mtime":1630910296858,"results":"11","hashOfConfig":"12"},{"size":861,"mtime":1630930785246,"results":"13","hashOfConfig":"12"},{"size":180,"mtime":1630837272000,"results":"14","hashOfConfig":"12"},{"size":2720,"mtime":1630930477995,"results":"15","hashOfConfig":"12"},{"size":294,"mtime":1630837204000,"results":"16","hashOfConfig":"12"},{"size":784,"mtime":1630929347100,"results":"17","hashOfConfig":"12"},{"size":1583,"mtime":1630929319112,"results":"18","hashOfConfig":"12"},{"size":2203,"mtime":1630927611615,"results":"19","hashOfConfig":"12"},{"size":487,"mtime":1630927685916,"results":"20","hashOfConfig":"12"},{"size":2557,"mtime":1630930257992,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hwgdbk",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/home/karo/Documents/routeApp/src/index.js",[],["46","47"],"/home/karo/Documents/routeApp/src/App.js",["48"],"/home/karo/Documents/routeApp/src/app/store.js",[],"/home/karo/Documents/routeApp/src/style.js",[],"/home/karo/Documents/routeApp/src/features/routesAPI.js",[],"/home/karo/Documents/routeApp/src/features/appSlice.js",["49"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  routes: [],\n  currentStop: {},\n  finishedCount: 0,\n};\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    routes: (state, action) => {\n      state.routes = action.payload;\n    },\n    currentStop: (state, action) => {\n      state.currentStop = action.payload;\n    },\n    finishedCount: (state, action) => {\n      state.finishedCount += 1;\n    },\n  },\n});\n\nexport const { routes, currentStop, finishedCount } = appSlice.actions;\n\nexport const selectRoutes = (state) => state.app.routes;\nexport const selectFinishedCount = (state) => state.app.finishedCount;\nexport const selectCurrentStop = (state) => state.app.currentStop;\n\nexport default appSlice.reducer;\n","/home/karo/Documents/routeApp/src/components/Header.js",[],"/home/karo/Documents/routeApp/src/components/Map/Map.js",["50"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  Polyline,\r\n} from 'react-leaflet';\r\nimport { useSelector } from 'react-redux';\r\nimport L from 'leaflet';\r\nimport { selectCurrentStop, selectRoutes } from '../../features/appSlice';\r\nimport RedIcon from \"../../assets/red.svg\"\r\nimport BlueIcon from '../../assets/blue.svg'\r\n\r\nfunction Map() {\r\n  const finished = L.icon({\r\n    iconUrl:RedIcon,\r\n    iconSize: [27, 57],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n  const delivery = L.icon({\r\n    iconUrl:BlueIcon,\r\n    iconSize: [27, 57],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n  const { address } = useSelector(selectCurrentStop);\r\n  const stops = useSelector(selectRoutes);\r\n  const [stopsData, setStopsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (stops.length > 0) {\r\n      stops.forEach(({ address }) => {\r\n        arr.push(Object.values({ lat: address.lat, lng: address.lng }));\r\n      });\r\n    }\r\n    setStopsData(arr);\r\n  }, [stops]);\r\n\r\n  const stopsRoutes = () => {\r\n    if(stops.length > 0){\r\n      return stops.map((stop, index) => {\r\n        return (\r\n          <Marker position={[stop?.address?.lat,stop?.address?.lng]} icon={stop?.isFinished ? finished : delivery} key={index}>\r\n            <Popup>\r\n              <h3>{stop?.information?.name}</h3>\r\n              <span>{stop?.information?.street}</span>\r\n              <h4 style={{color:stop?.isFinished ? '#28a745' : 'tomato'}}>{stop?.isFinished ? 'Delivered' : 'Delivery'}</h4>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      className=\"map\"\r\n      center={[52.79797, 6.89503]}\r\n      zoom={13}\r\n      scrollWheelZoom={false}\r\n      style={{top:\"48px\"}}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Polyline pathOptions={{ color: '#1329FE' }} positions={stopsData} />\r\n      {\r\n        stopsRoutes()\r\n      }\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","/home/karo/Documents/routeApp/src/components/Stops/Stops.js",[],"/home/karo/Documents/routeApp/src/components/Stops/StopItem.js",["51","52"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { routes,currentStop, selectCurrentStop, finishedCount } from '../../features/appSlice';\r\nimport {\r\n  Stop,\r\n  StopNumber,\r\n  StopInfo,\r\n  Address,\r\n  TimeInfo,\r\n  FinishIcon,\r\n  FinishSection,\r\n  StopWrapper,\r\n} from '../../style';\r\n\r\nfunction StopItem({ stop, stops, index }) {\r\n  const {\r\n    information,\r\n    sequence_number,\r\n    arr_time_string,\r\n    end_time_string,\r\n    time_window_earliest,\r\n    time_window_latest,\r\n    isFinished\r\n  } = stop;\r\n  const [selected, setSelected] = useState(false);\r\n  const [finished, setFinished] = useState(false);\r\n  const [color, setColor] = useState('');\r\n  const dispatch = useDispatch();\r\n  \r\n  const doneStop = useSelector(selectCurrentStop)\r\n\r\n  const handleClick = () => {\r\n    !finished && setSelected(!selected);\r\n  };\r\n  const endRoute = () => {\r\n    let routesData = JSON.parse(JSON.stringify([...stops]));\r\n    routesData[index].isFinished = true;\r\n    dispatch(finishedCount())\r\n    dispatch(routes(routesData))\r\n    dispatch(currentStop(stop));\r\n    setFinished(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(isFinished){\r\n      setFinished(true)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if (selected) {\r\n      setColor('#E90052');\r\n    }\r\n    if (finished) {\r\n      setColor('#4688F1');\r\n    }\r\n  }, [selected, finished]);\r\n  return (\r\n    <StopWrapper selected={selected} finished={finished}>\r\n      <Stop onClick={handleClick} finished={finished}>\r\n        <StopInfo>\r\n          <StopNumber selected={selected || finished ? color : ''}>\r\n            {finished ? (\r\n              <FinishIcon finished={finished && 'white'} />\r\n            ) : (\r\n              sequence_number\r\n            )}\r\n          </StopNumber>\r\n          <Address>\r\n            <span>{information?.name}</span>\r\n            <p>{information?.street}</p>\r\n            <p>\r\n              {information?.zipcode} {information?.city}\r\n            </p>\r\n          </Address>\r\n        </StopInfo>\r\n        {!finished && (\r\n          <TimeInfo>\r\n            <span>{arr_time_string || end_time_string}</span>\r\n            <p>\r\n              {time_window_earliest}-{time_window_latest}\r\n            </p>\r\n          </TimeInfo>\r\n        )}\r\n      </Stop>\r\n      {selected && !finished && (\r\n        <FinishSection onClick={endRoute}>\r\n          <div>\r\n            <FinishIcon />\r\n            <p>Finish</p>\r\n          </div>\r\n        </FinishSection>\r\n      )}\r\n    </StopWrapper>\r\n  );\r\n}\r\n\r\nexport default StopItem;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":25,"column":6,"nodeType":"59","endLine":25,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":28,"column":11,"nodeType":"63","messageId":"64","endLine":28,"endColumn":18},{"ruleId":"61","severity":1,"message":"66","line":30,"column":9,"nodeType":"63","messageId":"64","endLine":30,"endColumn":17},{"ruleId":"57","severity":1,"message":"67","line":48,"column":6,"nodeType":"59","endLine":48,"endColumn":8,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-unused-vars","'createAsyncThunk' is defined but never used.","Identifier","unusedVar","'address' is assigned a value but never used.","'doneStop' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isFinished'. Either include it or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [getData]",{"range":"77","text":"78"},"Update the dependencies array to be: [isFinished]",{"range":"79","text":"80"},[694,696],"[getData]",[1234,1236],"[isFinished]"]