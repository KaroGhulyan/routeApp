{"ast":null,"code":"import _slicedToArray from \"/home/karo/Documents/routeApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/karo/Documents/routeApp/src/components/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport { useSelector } from 'react-redux';\nimport L from 'leaflet';\nimport { selectRoutes } from '../../features/appSlice';\nimport RedIcon from \"../../assets/red.svg\";\nimport BlueIcon from \"../../assets/blue.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  var _this = this;\n\n  var finished = L.icon({\n    iconUrl: RedIcon,\n    iconSize: [27, 57],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41]\n  });\n  var delivery = L.icon({\n    iconUrl: BlueIcon,\n    iconSize: [27, 57],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41]\n  });\n  var stops = useSelector(selectRoutes);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stopsData = _useState2[0],\n      setStopsData = _useState2[1];\n\n  useEffect(function () {\n    var arr = [];\n\n    if (stops.length > 0) {\n      stops.forEach(function (_ref) {\n        var address = _ref.address;\n        arr.push(Object.values({\n          lat: address.lat,\n          lng: address.lng\n        }));\n      });\n    }\n\n    setStopsData(arr);\n  }, [stops]);\n\n  var stopsRoutes = function stopsRoutes() {\n    if (stops.length > 0) {\n      return stops.map(function (stop, index) {\n        var _stop$address, _stop$address2, _stop$information, _stop$information2;\n\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop === null || stop === void 0 ? void 0 : (_stop$address = stop.address) === null || _stop$address === void 0 ? void 0 : _stop$address.lat, stop === null || stop === void 0 ? void 0 : (_stop$address2 = stop.address) === null || _stop$address2 === void 0 ? void 0 : _stop$address2.lng],\n          icon: (stop === null || stop === void 0 ? void 0 : stop.isFinished) ? finished : delivery,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: stop === null || stop === void 0 ? void 0 : (_stop$information = stop.information) === null || _stop$information === void 0 ? void 0 : _stop$information.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: stop === null || stop === void 0 ? void 0 : (_stop$information2 = stop.information) === null || _stop$information2 === void 0 ? void 0 : _stop$information2.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: (stop === null || stop === void 0 ? void 0 : stop.isFinished) ? '#28a745' : 'tomato'\n              },\n              children: (stop === null || stop === void 0 ? void 0 : stop.isFinished) ? 'Delivered' : 'Delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    className: \"map\",\n    center: [52.79797, 6.89503],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      top: \"48px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n      pathOptions: {\n        color: '#1329FE'\n      },\n      positions: stopsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), stopsRoutes()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"mOLsk3GKDwgW/mZUiLAXw72ddls=\", false, function () {\n  return [useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/karo/Documents/routeApp/src/components/Map/Map.js"],"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polyline","useSelector","L","selectRoutes","Map","finished","icon","iconUrl","RedIcon","iconSize","iconAnchor","popupAnchor","delivery","BlueIcon","stops","stopsData","setStopsData","arr","length","forEach","address","push","Object","values","lat","lng","stopsRoutes","map","stop","index","isFinished","information","name","street","color","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  Polyline,\r\n} from 'react-leaflet';\r\nimport { useSelector } from 'react-redux';\r\nimport L from 'leaflet';\r\nimport {selectRoutes } from '../../features/appSlice';\r\nimport RedIcon from \"../../assets/red.svg\"\r\nimport BlueIcon from '../../assets/blue.svg'\r\n\r\nfunction Map() {\r\n  const finished = L.icon({\r\n    iconUrl:RedIcon,\r\n    iconSize: [27, 57],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n  const delivery = L.icon({\r\n    iconUrl:BlueIcon,\r\n    iconSize: [27, 57],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n  const stops = useSelector(selectRoutes);\r\n  const [stopsData, setStopsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (stops.length > 0) {\r\n      stops.forEach(({ address }) => {\r\n        arr.push(Object.values({ lat: address.lat, lng: address.lng }));\r\n      });\r\n    }\r\n    setStopsData(arr);\r\n  }, [stops]);\r\n\r\n  const stopsRoutes = () => {\r\n    if(stops.length > 0){\r\n      return stops.map((stop, index) => {\r\n        return (\r\n          <Marker position={[stop?.address?.lat,stop?.address?.lng]} icon={stop?.isFinished ? finished : delivery} key={index}>\r\n            <Popup>\r\n              <h3>{stop?.information?.name}</h3>\r\n              <span>{stop?.information?.street}</span>\r\n              <h4 style={{color:stop?.isFinished ? '#28a745' : 'tomato'}}>{stop?.isFinished ? 'Delivered' : 'Delivery'}</h4>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      className=\"map\"\r\n      center={[52.79797, 6.89503]}\r\n      zoom={13}\r\n      scrollWheelZoom={false}\r\n      style={{top:\"48px\"}}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Polyline pathOptions={{ color: '#1329FE' }} positions={stopsData} />\r\n      {\r\n        stopsRoutes()\r\n      }\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}